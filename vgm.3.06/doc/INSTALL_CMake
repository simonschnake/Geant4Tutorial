 $Id$ 

------------------------------------------------------------------------
 The documentation file for the Virtual Geometry Model
 Copyright (C) 2007, Ivana Hrivnacova               
 All rights reserved. 
           
 For the licensing terms see vgm/LICENSE.
 Contact: ivana@ipno.in2p3.fr
------------------------------------------------------------------------

 The Virtual Geometry Model - Installation with CMake
========================================================
 
 Configuration:
 --------------
   The CMake build system will build and install VGM like a typical CMake'ed 
   package. 

   First we will assume that vgm source has been downloaded in a directory 
   /my_path, so that the VGM directory packages sits in a subdirectory 

     /my_path/vgm/packages
 
   We refer to this directory as the source directory. The next step is to 
   create a directory in which to configure and run the build and store the 
   build products. This directory should not be the same as, or inside, 
   the source directory. In this guide, we create this build directory 
   alongside our source directory:

     cd /my_path
     mkdir vgm_build
     ls
     vgm vgm_build

   To configure the build, change into the build directory and run CMake:

     cd /my_path/vgm_build
     cmake -DCMAKE_INSTALL_PREFIX=/my_path/vgm_install /my_path/vgm
  
   Here, the CMake Variable CMAKE_INSTALL_PREFIX is used to set the install 
   directory, the directory under which the VGM libraries and headers will be 
   installed. It must be an absolute path. The second argument to CMake is the 
   path to the source directory. In this example, we have used the absolute path
   to the source directory, but you can also use the relative path from your 
   build directory to your source directory. 

   Additional arguments may be passed to CMake to (in)activate optional 
   components of VGM, or tune the build and install parameters. See 
   vgm/CMakeList.txt for details of these  options. If you run CMake and decide
   afterwards you want to activate additional options, simply rerun CMake 
   passing it those options.

   On executing this CMake command, it will run, configuring the build and 
   generating  Unix Makefiles to perform the actual build. 
 
 Compilation:
 ------------ 
   After the configuration has run, to run the build, simply execute make in 
   the build directory:

     make -jN

   where N is the number of parallel jobs you require (e.g. if your machine has
   a dual core processor, you could set N to 2).

   The build will now run, and will output information on the progress of the 
   build and current operations. If you need more output to help resolve issues
   or simply for information, run make as

     make -jN VERBOSE=1
  
 Installation:
 ------------- 
   Once the build has completed, you can install VGM to the directory you 
   specified earlier in CMAKE_INSTALL_PREFIX by running

     make install
  
   in the build directory. The libraries and headers are installed under your
   chosen install prefix in a standard Unix-style hierarchy of directories

 Test:
 -----
   The test program is automatically build in the build directory,
   in /my_path/vgm_build/test .
 
   For different test options, see vgm/test/README file;
   eg.
   vgm_test VGM Geant4 Root noXML Solids

   For launching test suites:
   ./test1_suite.sh  or
   ./test2_suite.sh
   ./test3_suite.sh
   The output from tests stored in log directory can be then compared
   with the reference output in log_ref directory.

 
 Aknowledgements:

 The CMake build for Virtual Geometry Model is a result of a merge 
 of the CMake configuration files kindly provided 
 by Florian Uhlig, GSI and Pere Mato, CERN.

 This documentation file was inspired by Geant4 Installation Guide,
 chapter 2.1. 
 http://geant4.web.cern.ch/geant4/UserDocumentation/UsersGuides/InstallationGuide/html/index.html


